# -*- coding: utf-8 -*-
# Endovia (Logs)
# Copyright (C) 2010-2020 Jeremy Aaron Flexer.

def _category():
    return {
    0: 1014,
    1: 1014,
    2: 1014,
    3: 1014,
    4: 1014,
    5: 1014,
    6: 1014,
    7: 1014,
    8: 1014,
    9: 1014,
    10: 1014,
    11: 1014,
    12: 1014,
    13: 1014,
    14: 1014,
    15: 1014,
    16: 1014,
    17: 1014,
    18: 1014,
    19: 1014,
    20: 1014,
    21: 1014,
    22: 1014,
    }

def _identity():
    return {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    10: 10,
    11: 11,
    12: 12,
    13: 13,
    14: 14,
    15: 15,
    16: 16,
    17: 17,
    18: 18,
    19: 19,
    20: 20,
    21: 21,
    22: 22,
    }

def _name():
    return {
    0: "Oak Tree",
    1: "Pine Tree",
    2: "Spruce Tree",
    3: "Birch Tree",
    4: "Sycamore Tree",
    5: "Willow Tree",
    6: "Maple Tree",
    7: "Yew Tree",
    8: "Teak Tree",
    9: "Mahogany Tree",
    10: "Hickory Tree",
    11: "Walnut Tree",
    12: "Elm Tree",
    13: "Chestnut Tree",
    14: "Cedar Tree",
    15: "Ash Tree",
    16: "Aspen Tree",
    17: "Apple Tree",
    18: "Cherry Tree",
    19: "Pear Tree",
    20: "Plum Tree",
    21: "Pecan Tree",
    22: "Ebony Tree",
    }

def _kind():
    return {
    0: "Log",
    1: "Log",
    2: "Log",
    3: "Log",
    4: "Log",
    5: "Log",
    6: "Log",
    7: "Log",
    8: "Log",
    9: "Log",
    10: "Log",
    11: "Log",
    12: "Log",
    13: "Log",
    14: "Log",
    15: "Log",
    16: "Log",
    17: "Log",
    18: "Log",
    19: "Log",
    20: "Log",
    21: "Log",
    22: "Log",
    }

def _description():
    return {
    0: "Burn it, fletch it, construct with it, who knows.",
    1: "Burn it, fletch it, construct with it, who knows.",
    2: "Burn it, fletch it, construct with it, who knows.",
    3: "Burn it, fletch it, construct with it, who knows.",
    4: "Burn it, fletch it, construct with it, who knows.",
    5: "Burn it, fletch it, construct with it, who knows.",
    6: "Burn it, fletch it, construct with it, who knows.",
    7: "Burn it, fletch it, construct with it, who knows.",
    8: "Burn it, fletch it, construct with it, who knows.",
    9: "Burn it, fletch it, construct with it, who knows.",
    10: "Burn it, fletch it, construct with it, who knows.",
    11: "Burn it, fletch it, construct with it, who knows.",
    12: "Burn it, fletch it, construct with it, who knows.",
    13: "Burn it, fletch it, construct with it, who knows.",
    14: "Burn it, fletch it, construct with it, who knows.",
    15: "Burn it, fletch it, construct with it, who knows.",
    16: "Burn it, fletch it, construct with it, who knows.",
    17: "Burn it, fletch it, construct with it, who knows.",
    18: "Burn it, fletch it, construct with it, who knows.",
    19: "Burn it, fletch it, construct with it, who knows.",
    20: "Burn it, fletch it, construct with it, who knows.",
    21: "Burn it, fletch it, construct with it, who knows.",
    22: "Burn it, fletch it, construct with it, who knows.",
    }

def _symbol(): # %.
    return {
    0: "%",
    1: "%",
    2: "%",
    3: "%",
    4: "%",
    5: "%",
    6: "%",
    7: "%",
    8: "%",
    9: "%",
    10: "%",
    11: "%",
    12: "%",
    13: "%",
    14: "%",
    15: "%",
    16: "%",
    17: "%",
    18: "%",
    19: "%",
    20: "%",
    21: "%",
    22: "%",
    }

def _color():
    return {
    0: ((127,127,127), (0,0,0)),
    1: ((127,127,127), (0,0,0)),
    2: ((127,127,127), (0,0,0)),
    3: ((127,127,127), (0,0,0)),
    4: ((127,127,127), (0,0,0)),
    5: ((127,127,127), (0,0,0)),
    6: ((127,127,127), (0,0,0)),
    7: ((127,127,127), (0,0,0)),
    8: ((127,127,127), (0,0,0)),
    9: ((127,127,127), (0,0,0)),
    10: ((127,127,127), (0,0,0)),
    11: ((127,127,127), (0,0,0)),
    12: ((127,127,127), (0,0,0)),
    13: ((127,127,127), (0,0,0)),
    14: ((127,127,127), (0,0,0)),
    15: ((127,127,127), (0,0,0)),
    16: ((127,127,127), (0,0,0)),
    17: ((127,127,127), (0,0,0)),
    18: ((127,127,127), (0,0,0)),
    19: ((127,127,127), (0,0,0)),
    20: ((127,127,127), (0,0,0)),
    21: ((127,127,127), (0,0,0)),
    22: ((127,127,127), (0,0,0)),
    }

def _clip():
    return {
    0: False,
    1: False,
    2: False,
    3: False,
    4: False,
    5: False,
    6: False,
    7: False,
    8: False,
    9: False,
    10: False,
    11: False,
    12: False,
    13: False,
    14: False,
    15: False,
    16: False,
    17: False,
    18: False,
    19: False,
    20: False,
    21: False,
    22: False,
    }

def _transparent():
    return {
    0: True,
    1: True,
    2: True,
    3: True,
    4: True,
    5: True,
    6: True,
    7: True,
    8: True,
    9: True,
    10: True,
    11: True,
    12: True,
    13: True,
    14: True,
    15: True,
    16: True,
    17: True,
    18: True,
    19: True,
    20: True,
    21: True,
    22: True,
    }

def _weight():
    return {
    0: 1.4,
    1: 1.4,
    2: 1.4,
    3: 1.4,
    4: 1.4,
    5: 1.4,
    6: 1.4,
    7: 1.4,
    8: 1.4,
    9: 1.4,
    10: 1.4,
    11: 1.4,
    12: 1.4,
    13: 1.4,
    14: 1.4,
    15: 1.4,
    16: 1.4,
    17: 1.4,
    18: 1.4,
    19: 1.4,
    20: 1.4,
    21: 1.4,
    22: 1.4,
    }

def _value():
    return {
    0: 60,
    1: 112,
    2: 200,
    3: 360,
    4: 400,
    5: 570,
    6: 721,
    7: 889,
    8: 1070,
    9: 1275,
    10: 1400,
    11: 1640,
    12: 1700,
    13: 1846,
    14: 1940,
    15: 2090,
    16: 2230,
    17: 2309,
    18: 2437,
    19: 2593,
    20: 2640,
    21: 2704,
    22: 4600,
    }

def logs():
    return {
    0: (_category()[0], _identity()[0], _name()[0], _kind()[0], _description()[0], _symbol()[0], _color()[0], _clip()[0], _transparent()[0], _weight()[0], _value()[0]),
    1: (_category()[1], _identity()[1], _name()[1], _kind()[1], _description()[1], _symbol()[1], _color()[1], _clip()[1], _transparent()[1], _weight()[1], _value()[1]),
    2: (_category()[2], _identity()[2], _name()[2], _kind()[2], _description()[2], _symbol()[2], _color()[2], _clip()[2], _transparent()[2], _weight()[2], _value()[2]),
    3: (_category()[3], _identity()[3], _name()[3], _kind()[3], _description()[3], _symbol()[3], _color()[3], _clip()[3], _transparent()[3], _weight()[3], _value()[3]),
    4: (_category()[4], _identity()[4], _name()[4], _kind()[4], _description()[4], _symbol()[4], _color()[4], _clip()[4], _transparent()[4], _weight()[4], _value()[4]),
    5: (_category()[5], _identity()[5], _name()[5], _kind()[5], _description()[5], _symbol()[5], _color()[5], _clip()[5], _transparent()[5], _weight()[5], _value()[5]),
    6: (_category()[6], _identity()[6], _name()[6], _kind()[6], _description()[6], _symbol()[6], _color()[6], _clip()[6], _transparent()[6], _weight()[6], _value()[6]),
    7: (_category()[7], _identity()[7], _name()[7], _kind()[7], _description()[7], _symbol()[7], _color()[7], _clip()[7], _transparent()[7], _weight()[7], _value()[7]),
    8: (_category()[8], _identity()[8], _name()[8], _kind()[8], _description()[8], _symbol()[8], _color()[8], _clip()[8], _transparent()[8], _weight()[8], _value()[8]),
    9: (_category()[9], _identity()[9], _name()[9], _kind()[9], _description()[9], _symbol()[9], _color()[9], _clip()[9], _transparent()[9], _weight()[9], _value()[9]),
    10: (_category()[10], _identity()[10], _name()[10], _kind()[10], _description()[10], _symbol()[10], _color()[10], _clip()[10], _transparent()[10], _weight()[10], _value()[10]),
    11: (_category()[11], _identity()[11], _name()[11], _kind()[11], _description()[11], _symbol()[11], _color()[11], _clip()[11], _transparent()[11], _weight()[11], _value()[11]),
    12: (_category()[12], _identity()[12], _name()[12], _kind()[12], _description()[12], _symbol()[12], _color()[12], _clip()[12], _transparent()[12], _weight()[12], _value()[12]),
    13: (_category()[13], _identity()[13], _name()[13], _kind()[13], _description()[13], _symbol()[13], _color()[13], _clip()[13], _transparent()[13], _weight()[13], _value()[13]),
    14: (_category()[14], _identity()[14], _name()[14], _kind()[14], _description()[14], _symbol()[14], _color()[14], _clip()[14], _transparent()[14], _weight()[14], _value()[14]),
    15: (_category()[15], _identity()[15], _name()[15], _kind()[15], _description()[15], _symbol()[15], _color()[15], _clip()[15], _transparent()[15], _weight()[15], _value()[15]),
    16: (_category()[16], _identity()[16], _name()[16], _kind()[16], _description()[16], _symbol()[16], _color()[16], _clip()[16], _transparent()[16], _weight()[16], _value()[16]),
    17: (_category()[17], _identity()[17], _name()[17], _kind()[17], _description()[17], _symbol()[17], _color()[17], _clip()[17], _transparent()[17], _weight()[17], _value()[17]),
    18: (_category()[18], _identity()[18], _name()[18], _kind()[12], _description()[18], _symbol()[18], _color()[18], _clip()[18], _transparent()[18], _weight()[18], _value()[18]),
    19: (_category()[19], _identity()[19], _name()[19], _kind()[19], _description()[19], _symbol()[19], _color()[19], _clip()[19], _transparent()[19], _weight()[19], _value()[19]),
    20: (_category()[20], _identity()[20], _name()[20], _kind()[20], _description()[20], _symbol()[20], _color()[20], _clip()[20], _transparent()[20], _weight()[20], _value()[20]),
    21: (_category()[21], _identity()[21], _name()[21], _kind()[21], _description()[21], _symbol()[21], _color()[21], _clip()[21], _transparent()[21], _weight()[21], _value()[21]),
    22: (_category()[22], _identity()[22], _name()[22], _kind()[22], _description()[22], _symbol()[22], _color()[22], _clip()[22], _transparent()[22], _weight()[22], _value()[22]),
    }

# Jafinoxal.
